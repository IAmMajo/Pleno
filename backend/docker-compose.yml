x-shared_environment: &shared_environment
  DATABASE_HOST: postgres
  DATABASE_USERNAME: vapor
  DATABASE_PASSWORD: example

services:                                                                                                                                      
  traefik:
    image: traefik:v3.1.6
    container_name: kivop-traefik
    restart: unless-stopped
    command:
      --api.insecure=true
      --api.dashboard=true
      --entrypoints.http.address=:80
      --providers.docker
      --providers.docker.exposedbydefault=false
    ports:
      - "80:80"
#      - "443:443"
      - "8080:8080" # only for dashboard
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

#
# Example Service for traefik lables
#
  whoami:
    image: traefik/whoami
    container_name: kivop-whoami
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.rule: Path(`/whoami`)

#
# Database
#
  postgres:
    image: postgres:13.16
    container_name: kivop-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: vapor # only for development
      POSTGRES_PASSWORD: example # only for development
    volumes:
      - ./init-dbs.sh:/docker-entrypoint-initdb.d/init-dbs.sh
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

#
# Vapor: config-service
#
  config-service:
    extends:
      file: ./config-service/docker-compose.yml
      service: app
    container_name: kivop-config-service
    depends_on:
      - postgres
    environment:
      <<: *shared_environment
      DATABASE_NAME: config_db
    labels:
      traefik.enable: true
      traefik.http.middlewares.config-service-replace-path-regex.replacepathregex.regex: ^/config-service(:/(.*))?
      traefik.http.middlewares.config-service-replace-path-regex.replacepathregex.replacement: /$$1
      traefik.http.routers.config-service.rule: PathPrefix(`/config-service`)
      traefik.http.routers.config-service.middlewares: config-service-replace-path-regex

#
# Vapor: meeting-service
#
  meeting-service:
    extends:
      file: ./meeting-service/docker-compose.yml
      service: app
    container_name: kivop-meeting-service
    depends_on:
      - config-service
    environment:
      <<: *shared_environment
      DATABASE_NAME: meeting_db
    labels:
      traefik.enable: true
      traefik.http.middlewares.meeting-service-replace-path-regex.replacepathregex.regex: ^/meeting-service(:/(.*))?
      traefik.http.middlewares.meeting-service-replace-path-regex.replacepathregex.replacement: /$$1
      traefik.http.routers.meeting-service.rule: PathPrefix(`/meeting-service`)
      traefik.http.routers.meeting-service.middlewares: meeting-service-replace-path-regex

#
# Vapor: auth-service
#
  auth-service:
    extends:
      file: ./auth-service/docker-compose.yml
      service: app
    container_name: kivop-auth-service
    depends_on:
      - config-service
    environment:
      <<: *shared_environment
      DATABASE_NAME: auth_db
    labels:
      traefik.enable: true
      traefik.http.middlewares.auth-service-replace-path-regex.replacepathregex.regex: ^/auth-service(:/(.*))?
      traefik.http.middlewares.auth-service-replace-path-regex.replacepathregex.replacement: /$$1
      traefik.http.routers.auth-service.rule: PathPrefix(`/auth-service`)
      traefik.http.routers.auth-service.middlewares: auth-service-replace-path-regex

#
# Vapor: notifications-service
#
  notifications-service:
    extends:
      file: ./notifications-service/docker-compose.yml
      service: app
    container_name: kivop-notifications-service
    depends_on:
      - config-service
    environment:
      <<: *shared_environment
      DATABASE_NAME: notifications_db
    labels:
      traefik.enable: true
      traefik.http.middlewares.notifications-service-replace-path-regex.replacepathregex.regex: ^/notifications-service(:/(.*))?
      traefik.http.middlewares.notifications-service-replace-path-regex.replacepathregex.replacement: /$$1
      traefik.http.routers.notifications-service.rule: PathPrefix(`/notifications-service`)
      traefik.http.routers.notifications-service.middlewares: notifications-service-replace-path-regex

#
# Volumes
#
volumes:
  postgres-data:
    name: "kivop-postgres-data"

#
# Networks
#
networks:
  default:
    name: "kivop-net"
