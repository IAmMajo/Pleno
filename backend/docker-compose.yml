x-shared_environment: &shared_environment
  DATABASE_HOST: postgres
  DATABASE_USERNAME: vapor
  DATABASE_PASSWORD: example
  DATABASE_NAME: kivop

services:                                                                                                                                      
  traefik:
    image: traefik:v3.2.0
    container_name: kivop-traefik
    restart: unless-stopped
    command:
      --api.insecure=true
      --api.dashboard=true
      --entrypoints.http.address=:80
      --providers.docker
      --providers.docker.exposedbydefault=false
    ports:
      - "80:80"
#      - "443:443"
      - "8080:8080" # only for dashboard
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

#
# Database
#
  postgres:
    image: postgres:17.0-bookworm
    container_name: kivop-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: vapor # only for development
      POSTGRES_PASSWORD: example # only for development
    volumes:
      - ./init-dbs.sh:/docker-entrypoint-initdb.d/init-dbs.sh
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

#
# Vapor: config-service
#
  config-service:
    image: kivop-config-service:latest
    build:
      context: ./..
      dockerfile: backend/config-service/Dockerfile
    container_name: kivop-config-service
    depends_on:
      - postgres
    environment:
      <<: *shared_environment
    labels:
      traefik.enable: true
      traefik.http.routers.config-service.rule: PathPrefix(`/config`)

  config-service-migration:
    profiles:
      - not-default
    image: kivop-config-service:latest
    build:
      context: ./..
      dockerfile: backend/config-service/Dockerfile
    container_name: kivop-config-service-migration
    environment:
      <<: *shared_environment
    depends_on:
      - postgres
    command: ["migrate", "--yes"]

  config-service-revert:
    profiles:
      - not-default
    image: kivop-config-service:latest
    build:
      context: ./..
      dockerfile: backend/config-service/Dockerfile
    container_name: kivop-config-service-revert
    environment:
      <<: *shared_environment
    depends_on:
      - postgres
    command: ["migrate", "--revert", "--yes"]

#
# Vapor: meeting-service
#
  meeting-service:
    image: kivop-meeting-service:latest
    build:
      context: ./..
      dockerfile: backend/meeting-service/Dockerfile
    container_name: kivop-meeting-service
    depends_on:
      - config-service
    environment:
      <<: *shared_environment
    labels:
      traefik.enable: true
      traefik.http.routers.meeting-service.rule: PathPrefix(`/meeting`)

  meeting-service-migration:
    profiles:
      - not-default
    image: kivop-meeting-service:latest
    build:
      context: ./..
      dockerfile: backend/meeting-service/Dockerfile
    container_name: kivop-meeting-service-migration
    environment:
      <<: *shared_environment
    depends_on:
      - postgres
    command: ["migrate", "--yes"]

  meeting-service-revert:
    profiles:
      - not-default
    image: kivop-meeting-service:latest
    build:
      context: ./..
      dockerfile: backend/meeting-service/Dockerfile
    container_name: kivop-meeting-service-revert
    environment:
      <<: *shared_environment
    depends_on:
      - postgres
    command: ["migrate", "--revert", "--yes"]

#
# Vapor: auth-service
#
  auth-service:
    image: kivop-auth-service:latest
    build:
      context: ./..
      dockerfile: backend/auth-service/Dockerfile
    container_name: kivop-auth-service
    depends_on:
     - config-service
    environment:
      <<: *shared_environment
    labels:
      traefik.enable: true
      traefik.http.routers.auth-service.rule: PathPrefix(`/auth`) || PathPrefix(`/users`)

  auth-service-migration:
    profiles:
      - not-default
    image: kivop-auth-service:latest
    build:
      context: ./..
      dockerfile: backend/auth-service/Dockerfile
    container_name: kivop-auth-service-migration
    environment:
      <<: *shared_environment
    depends_on:
      - postgres
    command: ["migrate", "--yes"]

  auth-service-revert:
    profiles:
      - not-default
    image: kivop-auth-service:latest
    build:
      context: ./..
      dockerfile: backend/auth-service/Dockerfile
    container_name: kivop-auth-service-revert
    environment:
      <<: *shared_environment
    depends_on:
      - postgres
    command: ["migrate", "--revert", "--yes"]

#
# Vapor: notifications-service
#
  notifications-service:
    image: kivop-notifications-service:latest
    build:
      context: ./..
      dockerfile: backend/notifications-service/Dockerfile
    container_name: kivop-notifications-service
    depends_on:
      - config-service
    environment:
      <<: *shared_environment
    labels:
      traefik.enable: true
      traefik.http.routers.notifications-service.rule: PathPrefix(`/email`)

#
# Volumes
#
volumes:
  postgres-data:
    name: "kivop-postgres-data"

#
# Networks
#
networks:
  default:
    name: "kivop-net"
